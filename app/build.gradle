plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services"
}

android {
    namespace 'com.orot.menuboss_tv'
    lint {
        baseline = file("lint-baseline.xml")
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.orot.menuboss_tv"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        prod {
            res.srcDirs = ['src/prod/assets']
        }
        dev {
            res.srcDirs = ['src/dev/assets']
        }
    }

    flavorDimensions += "default"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            manifestPlaceholders = [appLabel: "MenuBossTV(DEV)"]
        }
        prod {
            applicationIdSuffix ""
            versionNameSuffix ""
            manifestPlaceholders = [appLabel: "MenuBossTV"]
        }
    }

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('signing/keystore.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['devKeyAlias']
            keyPassword keystoreProperties['devKeyPassword']
            storeFile file(keystoreProperties['devStoreFile'])
            storePassword keystoreProperties['devStorePassword']
        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        compose true
    }
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    def tv_compose_version = '1.0.0-alpha07'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation "androidx.compose.ui:ui-tooling"
    // Compose integration with activities
    implementation "androidx.activity:activity-compose:1.7.2"

    // TV Compose
    implementation "androidx.tv:tv-foundation:$tv_compose_version"
    implementation "androidx.tv:tv-material:$tv_compose_version"

    // view model
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // navigation
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    // async image loading
    implementation 'io.coil-kt:coil-compose:2.2.2'

    implementation 'androidx.ads:ads-identifier:1.0.0-alpha05'
    implementation 'com.google.guava:guava:28.0-android'

    implementation "com.google.zxing:core:3.5.1"

    // Client side dependency
    implementation 'com.google.firebase:firebase-messaging:23.1.0'
    implementation files("libs/A3LMessaging-1.1.0.aar")

    // Server side dependency
//    implementation 'com.google.firebase:firebase-admin:8.1.0'
//    implementation 'com.google.auth:google-auth-library-oauth2-http:0.26.0'
//    implementation 'com.google.code.gson:gson:2.9.0'

//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}